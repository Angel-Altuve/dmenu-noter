#!/usr/bin/env bash

EDITOR=${EDITOR:-nvim}
VIEW=zathura
TERMINAL=${TERMINAL:-kitty}
MENU="dmenu -c -l 10 -p"

# <<------ Directories ------>> #
book_library="/path/to/books/"
note_library="/path/to/notes/"
template_library="/path/to/note/templates/"
article_library="/path/to/articles/"
diary="/path/to/diary/"

# <<------ Sync ------>> #
user=johndoe123
port=8080
storage=/mnt/data/sync_folder
server=backup-server.example.com

# <<------ Options ------>> #
declare -A actions
actions["ðŸ“‘ Create Note"]=$template_library
actions["ðŸ”– View Notes"]=$note_library
actions["ðŸ“š Books"]=$book_library
actions["ðŸ“œ Articles"]=$article_library
actions["ï‘ª  Sync"]=$note_library
actions["ó°Œ±  Diary"]=$diary

# <<------ Main ------>> #
create_document() {
  document_type=$(echo -e "Basic\nLaTeX\nBeamer\nRmark" | $MENU "What kind of note?")

  if [ -z "$document_type" ]; then
    return
  fi

  case "$document_type" in
  Basic)
    template="SimpleNote.md"
    EXTENSION="md"
    message="Basic Document Created!"
    ;;
  LaTeX)
    template="LaTeX.tex"
    EXTENSION="tex"
    message="LaTeX Document Created!"
    ;;
  Beamer)
    template="Presentation.tex"
    EXTENSION="tex"
    message="Beamer Presentation Created!"
    ;;
  Rmark)
    template="RMarkdown.rmd"
    EXTENSION="rmd"
    message="R Markdown Document Created!"
    ;;
  *)
    echo "Invalid option"
    return 1
    ;;
  esac

  cn_name=$($MENU "Enter a name for the note:")

  if [ -z "$cn_name" ]; then
    return
  fi

  if [ -f "$directory/$cn_name.$EXTENSION" ]; then
    if ! (echo -e "Yes\nNo" | $MENU "Note already exists. Overwrite?" | grep -q "Yes"); then
      return
    fi
  fi

  notify-send "$message"
  [ -d "$directory" ] && cp "$directory/Templates/$template" "$directory/$cn_name.$EXTENSION"
  "$TERMINAL" -e "$EDITOR" "$directory/$cn_name.$EXTENSION"
}

open_document() {
  FILE=$(find "$directory" -type f \( -name "*.epub" -o -name "*.pdf" \) -printf "%f\n" | $MENU "Select Document:")
  if [[ -n "$FILE" ]]; then
    FULL_PATH=$(find "$directory" -type f -name "$FILE" -print -quit)
    [ -f "$FULL_PATH" ] && $VIEW "$FULL_PATH"
  fi
}

edit_notes() {
  FILE=$(find "$directory" -type f -name "*.md" -printf "%f\n" | $MENU "Select Note:")
  if [[ -n "$FILE" ]]; then
    FULL_PATH=$(find "$directory" -type f -name "$FILE" -print -quit)
    [ -f "$FULL_PATH" ] && $TERMINAL -e "$EDITOR" "$FULL_PATH"
  fi
}

sync_notes() {
  if ping -c1 -W5 "$server" >/dev/null 2>&1; then
    rsync -rtu -e "ssh -p $port" "$note_library"/* "$user@$server:$storage" || notify-send --icon="script-error" "The notes could not be synchronized"
    rsync -rtu -e "ssh -p $port" "$user@$server:$storage"/* "$note_library" || exit 1
    notify-send --icon="folder-sync" "The notes have been synchronized"
  else
    notify-send --icon="script-error" "server unavailable"
  fi
}

edit_diary() {
  DIARY_TEMPDIR="$(mktemp -d -t diary-XXXXXX)"

  gpg_user=$(gpg --list-secret-keys --keyid-format=long | awk '/uid/ {print $NF}')

  choice=$(printf "%s\n" "$gpg_user" | $MENU "Select Key: ")
  [ -n "$choice" ] || exit 1

  if [ -f "$diary" ]; then
    gpg -q --yes --decrypt --recipient "$gpg_user" -o "$DIARY_TEMPDIR" "$diary" || exit 1
  else
    touch "$DIARY_TEMPDIR"
  fi

  "$EDITOR" "$DIARY_TEMPDIR" || exit 1
  gpg -q --yes --encrypt --recipient "$choice" -o "$diary" "$DIARY_TEMPDIR" || exit 1
  rm -f "$DIARY_TEMPDIR"
}

main() {
  selected_action=$(printf '%s\n' "${!actions[@]}" | $MENU "ðŸ“‚ Choose an action:")

  if [ -z "$selected_action" ]; then
    exit 0
  fi

  selected_dir_or_func="${actions[$selected_action]}"

  directory="$selected_dir_or_func"
  case $selected_action in
  "ðŸ“‘ Create Note")
    create_document
    ;;
  "ðŸ”– View Notes")
    edit_notes
    ;;
  "ðŸ“š Books" | "ðŸ“œ Articles")
    open_document
    ;;
  "ï‘ª  Sync")
    sync_notes
    ;;
  "ó°Œ±  Diary")
    open_diary
    ;;
  esac
}

main
